
	private _fnc_scriptNameParent = if (isNil '_fnc_scriptName') then {'BIS_fnc_EGSpectatorCamera'} else {_fnc_scriptName};
	private _fnc_scriptName = 'BIS_fnc_EGSpectatorCamera';
	scriptName _fnc_scriptName;

#line 1 "A3\functions_f_exp_a\EGSpectator\fn_EGSpectatorCamera.sqf [BIS_fnc_EGSpectatorCamera]"
#line 1 "A3\functions_f_exp_a\EGSpectator\fn_EGSpectatorCamera.sqf"

















disableSerialization;


scriptName "BIS_fnc_EGSpectatorCamera";


#line 1 "A3\Functions_F_Exp_A\EGSpectatorCommonDefines.inc"



#line 1 "A3\ui_f\hpp\defineResincl.inc"






















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 2 "A3\Functions_F_Exp_A\EGSpectatorCommonDefines.inc"

#line 1 "A3\ui_f\hpp\defineResinclDesign.inc"







































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 3 "A3\Functions_F_Exp_A\EGSpectatorCommonDefines.inc"

#line 1 "A3\ui_f\hpp\defineDIKCodes.inc"






























































































































































































#line 4 "A3\Functions_F_Exp_A\EGSpectatorCommonDefines.inc"

#line 1 "A3\ui_f\hpp\defineCommonGrids.inc"















































































































































































































































































































































































































































































#line 5 "A3\Functions_F_Exp_A\EGSpectatorCommonDefines.inc"

#line 1 "A3\ui_f_exp_a\UI\defineResinclDesign.inc"
#line 6 "A3\Functions_F_Exp_A\EGSpectatorCommonDefines.inc"

















































































































































































































#line 9 "A3\functions_f_exp_a\EGSpectator\fn_EGSpectatorCamera.sqf"



private ["_mode", "_params"];
_mode 	= _this param [0, "", [""]];
_params = _this param [1, [], [[]]];


switch _mode do
{




case "Initialize":
{
scriptName "BIS_fnc_EGSpectatorCamera: Initialize";

private _cameraType = _params param [0, 					"camcurator", [""]];
private _cameraMode = _params param [1, 						"free", [""]];


if !(_cameraType in 					[					"camera", 					"camcurator"]) exitWith
{
["Initialize: Invalid camera type %1, can be camcurator or camera", _cameraType] call BIS_fnc_error;
};


private _camera = _cameraType camCreate eyePos player;


if (!isNull _camera) then
{
_camera cameraEffect ["internal", "back"];
_camera setPosASL eyePos player;
_camera setDir getDirVisual player;
_camera camCommand "maxPitch 89.0";
_camera camCommand "minPitch -89.0";
_camera camCommand format ["speedDefault %1", 					0.1];
_camera camCommand format ["speedMax %1", 						2.0];
_camera camCommand "ceilingHeight 5000";
_camera spawn { sleep 1; _this camCommand "surfaceSpeed off"; };
cameraEffectEnableHUD true;


missionNamespace setVariable [						"BIS_EGSpectatorCamera_camera", _camera];


missionNamespace setVariable [					"BIS_EGSpectatorCamera_tick", addMissionEventHandler ["EachFrame", { [] call 						{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCameraTick", {}]) }; }]];


missionNamespace setVariable [			"BIS_EGSpectatorCamera_vision", 0];


missionNamespace setVariable [			"BIS_EGSpectatorCamera_dummyTarget", "Logic" createVehicleLocal getPosASLVisual player];


missionNamespace setVariable [	"BIS_EGSpectatorCamera_targetInVehicle", false];


missionNamespace setVariable [			"BIS_EGSpectatorCamera_zoom", 0.5];


["SetCameraHeightMode", [false]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };


["SetCameraUseSurfaceSpeed", [true]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };


if !(missionNamespace getVariable [			"BIS_EGSpectator_allowFreeCamera", true]) then
{
["SetCameraManual", [false]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };
};


[missionNamespace, "RscDisplayEGSpectator_MapStateChanged", { ["OnDisplayMapStateChanged", _this] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) }; }] call BIS_fnc_addScriptedEventHandler;
};


_camera;
};





case "Terminate":
{
scriptName "BIS_fnc_EGSpectatorCamera: Terminate";

private _camera = ["GetCamera"] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };
private _bDestroyed = false;

if (!isNull _camera) then
{
_camera cameraEffect ["terminate", "back"];
deleteVehicle _camera;
_bDestroyed = true;
};


["ResetInputs"] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };


missionNamespace setVariable [						"BIS_EGSpectatorCamera_camera", nil];


removeMissionEventHandler ["EachFrame", missionNamespace getVariable [					"BIS_EGSpectatorCamera_tick", -1]];
missionNamespace setVariable [					"BIS_EGSpectatorCamera_tick", nil];


missionNamespace setVariable [			"BIS_EGSpectatorCamera_vision", nil];


deleteVehicle (missionNamespace getVariable [			"BIS_EGSpectatorCamera_dummyTarget", objNull]);
missionNamespace setVariable [			"BIS_EGSpectatorCamera_dummyTarget", nil];


missionNamespace setVariable [			"BIS_EGSpectatorCamera_targetInVehicle", nil];


missionNamespace setVariable [			"BIS_EGSpectatorCamera_zoom", nil];


showHUD [true, true, true, true, true, true, true, true];
showChat true;


_bDestroyed;
};





case "IsInitialized":
{
scriptName "BIS_fnc_EGSpectatorCamera: IsInitialized";
!isNull (missionNamespace getVariable [						"BIS_EGSpectatorCamera_camera", objNull]);
};





case "GetCamera" :
{
scriptName "BIS_fnc_EGSpectatorCamera: GetCamera";
missionNamespace getVariable [						"BIS_EGSpectatorCamera_camera", objNull];
};





case "GetCameraType" :
{
scriptName "BIS_fnc_EGSpectatorCamera: GetCameraType";
missionNamespace getVariable [					"BIS_EGSpectatorCamera_cameraType", "camcurator"];
};




case "ToggleVisionMode" :
{
scriptName "BIS_fnc_EGSpectatorCamera: ToggleVisionMode";


if (["GetCameraMode"] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) } != 						"fps") then
{
private ["_currentMode", "_newMode"];
_currentMode = missionNamespace getVariable [			"BIS_EGSpectatorCamera_vision", 0];
_newMode = _currentMode;

switch (_currentMode) do
{
case 1 : { camUseNVG false; true setCamUseTi 0; missionNamespace setVariable [			"BIS_EGSpectatorCamera_vision", 2]; _newMode = 2; };
case 2 : { camUseNVG false; false setCamUseTi 0; missionNamespace setVariable [			"BIS_EGSpectatorCamera_vision", 0]; _newMode = 0; };
default  { camUseNVG true; false setCamUseTi 0; missionNamespace setVariable [			"BIS_EGSpectatorCamera_vision", 1]; _newMode = 1; };
};

["OnVisionModeChanged", [_newMode]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };
};
};




case "OnVisionModeChanged" :
{
scriptName "BIS_fnc_EGSpectatorCamera: OnVisionModeChanged";

private "_newMode";
_newMode = _params select 0;

playSound "RscDisplayCurator_visionMode";
};





case "GetCameraMode" :
{
scriptName "BIS_fnc_EGSpectatorCamera: GetCameraMode";
missionNamespace getVariable [					"BIS_EGSpectatorCamera_cameraMode", 						"free"];
};





case "SetCameraMode" :
{
scriptName "BIS_fnc_EGSpectatorCamera: SetCameraMode";

private _newMode = _params select 0;
private _oldMode = missionNamespace getVariable [					"BIS_EGSpectatorCamera_cameraMode", 						"free"];
private _bValidMode = _newMode in 					[						"follow", 						"fps", 						"free"];
private _bAllowFreeCamera = missionNamespace getVariable [			"BIS_EGSpectator_allowFreeCamera", true];
private _bAllow3PPCamera = missionNamespace getVariable [			"BIS_EGSpectator_allow3PPCamera", true];

if (_bValidMode && {_newMode != 						"free" || {_bAllowFreeCamera}} && {_newMode != 						"follow" || {_bAllow3PPCamera}}) then
{
private "_focus";
_focus = ["GetFocus"] call 							{ _this call (uiNamespace getVariable ["RscDisplayEGSpectator_script", {}]) };

if (!isNull _focus || _newMode == 						"free") then
{
missionNamespace setVariable [					"BIS_EGSpectatorCamera_cameraMode", _newMode];
["OnCameraModeChanged", [_newMode, _oldMode]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };
};
};
};




case "ToggleCameraMode" :
{
scriptName "BIS_fnc_EGSpectatorCamera: ToggleCameraMode";

private _mode = missionNamespace getVariable [					"BIS_EGSpectatorCamera_cameraMode", 						"free"];
private _bAllowFreeCamera = missionNamespace getVariable [			"BIS_EGSpectator_allowFreeCamera", true];
private _bAllow3PPCamera = missionNamespace getVariable [			"BIS_EGSpectator_allow3PPCamera", true];

switch (true) do
{
case (_mode == 						"free") :
{
if (_bAllow3PPCamera) then
{
["SetCameraMode", [						"follow"]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };
}
else
{
["SetCameraMode", [						"fps"]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };
};
};

case (_mode == 						"follow") :
{
["SetCameraMode", [						"fps"]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };
};

case (_mode == 						"fps") :
{
if (_bAllowFreeCamera) then
{
["SetCameraMode", [						"free"]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };
}
else
{
if (_bAllow3PPCamera) then
{
["SetCameraMode", [						"follow"]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };
}
else
{
["SetCameraMode", [						"fps"]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };
};
};
};

default
{
["SetCameraMode", [						"fps"]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };
};
};
};




case "OnCameraModeChanged" :
{
scriptName "BIS_fnc_EGSpectatorCamera: OnCameraModeChanged";

private ["_newMode", "_oldMode"];
_newMode = _params select 0;
_oldMode = _params select 1;

private ["_focus", "_camera"];
_focus = ["GetFocus"] call 							{ _this call (uiNamespace getVariable ["RscDisplayEGSpectator_script", {}]) };
_camera = ["GetCamera"] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };

switch (_newMode) do
{
case 						"fps":
{
_camera cameraEffect ["Terminate", "BACK"];
_focus switchCamera "INTERNAL";

[] call 				{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCameraResetTarget", {}]) };


camUseNVG false;
false setCamUseTi 1;
missionNamespace setVariable [			"BIS_EGSpectatorCamera_vision", 0];


["SetCameraManual", [false]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };

cameraEffectEnableHUD true;
showHUD [true, false, false, false, false, false, false, true];
};

case 						"follow":
{
_camera cameraEffect ["Internal", "BACK"];
_focus switchCamera "EXTERNAL";

[] call 				{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCameraResetTarget", {}]) };


["SetCameraManual", [false]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };

cameraEffectEnableHUD true;
showHUD [true, true, true, true, true, true, true, true];
};

case 						"free":
{
_camera cameraEffect ["Internal", "BACK"];
player switchCamera "INTERNAL";
_camera setDir getDirVisual _camera;

if (!isNull _focus) then
{
if (_oldMode == 						"fps") then
{
[_focus] call 				{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCameraPrepareTarget", {}]) };
};

[_focus] call 					{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCameraSetTarget", {}]) };
};


if !(["IsMapVisible"] call 							{ _this call (uiNamespace getVariable ["RscDisplayEGSpectator_script", {}]) }) then
{
["SetCameraManual", [true]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };
};

cameraEffectEnableHUD true;
showHUD [true, true, true, true, true, true, true, true];
};
};

[missionNamespace, "EGSpectator_OnCameraModeChanged", [_newMode]] call BIS_fnc_callScriptedEventHandler;
};




case "SetCameraTransform" :
{
private ["_location", "_vectorUp", "_vectorDir", "_dirOverride"];
_location = _params select 0;
_vectorUp = _params select 1;
_vectorDir = _params select 2;
_dirOverride = _params select 3;

private "_camera";
_camera = ["GetCamera"] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };

if (!isNull _camera) then
{
_camera setPosASL _location;
_camera setVectorDirAndUp [_vectorDir, _vectorUp];

if (_dirOverride select 1) then
{
_camera setDir (_dirOverride select 0);
};
};
};





case "GetCameraTransform" :
{
private "_camera";
_camera = ["GetCamera"] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };

if (!isNull _camera) then
{
[getPosASLVisual _camera, vectorDirVisual _camera, vectorUpVisual _camera, [getDirVisual _camera, false]];
}
else
{
[[0,0,0], [0,0,0], [0,0,0], [0, false]];
};
};





case "GetCameraPosition" :
{
private "_camera";
_camera = ["GetCamera"] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };

if (!isNull _camera) then
{
getPosASLVisual _camera;
}
else
{
[0,0,0];
};
};





case "GetCameraDirection" :
{
private "_camera";
_camera = ["GetCamera"] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };

if (!isNull _camera) then
{
getDirVisual _camera;
}
else
{
0;
};
};





case "GetDummyTarget" :
{
missionNamespace getVariable [			"BIS_EGSpectatorCamera_dummyTarget", objNull];
};





case "OnDisplayMapStateChanged" :
{
private "_shown";
_shown = _params select 0;

if (_shown) then
{
["SetCameraManual", [false]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };
}
else
{
if (["GetCameraMode"] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) } == 						"free") then
{
["SetCameraManual", [true]] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };
};
};
};




case "SetCameraManual" :
{
private "_manual";
_manual = _params select 0;

private "_camera";
_camera = missionNamespace getVariable [						"BIS_EGSpectatorCamera_camera", objNull];

if (!isNull _camera) then
{
if (_manual) then
{
_camera camCommand "manual on";
}
else
{
_camera camCommand "manual off";
};

missionNamespace setVariable [				"BIS_EGSpectatorCamera_manual", _manual];
};
};




case "GetCameraManual" :
{
missionNamespace getVariable [				"BIS_EGSpectatorCamera_manual", true];
};




case "SetCameraHeightMode" :
{
private "_atl";
_atl = _params select 0;

private "_camera";
_camera = missionNamespace getVariable [						"BIS_EGSpectatorCamera_camera", objNull];

if (!isNull _camera) then
{
if (_atl) then
{
_camera camCommand "atl on";
}
else
{
_camera camCommand "atl off";
};

missionNamespace setVariable [			"BIS_EGSpectatorCamera_heightMode", _atl];
};
};




case "GetCameraHeightMode" :
{
missionNamespace getVariable [			"BIS_EGSpectatorCamera_heightMode", true];
};




case "SetCameraUseSurfaceSpeed" :
{
private "_surfaceSpeed";
_surfaceSpeed = _params select 0;

private "_camera";
_camera = missionNamespace getVariable [						"BIS_EGSpectatorCamera_camera", objNull];

if (!isNull _camera) then
{
if (_surfaceSpeed) then
{
_camera camCommand "surfaceSpeed on";
}
else
{
_camera camCommand "surfaceSpeed off";
};

missionNamespace setVariable [	"BIS_EGSpectatorCamera_useSurfaceSpeed", _surfaceSpeed];
};
};




case "GetCameraUseSurfaceSpeed" :
{
missionNamespace getVariable [	"BIS_EGSpectatorCamera_useSurfaceSpeed", true];
};




case "AddZoomInput" :
{
private "_value";
_value = _params select 0;

private "_zoom";
_zoom = missionNamespace getVariable [			"BIS_EGSpectatorCamera_zoom", 0.0];
_zoom = _zoom + _value;

if (_zoom > 		5.0) then
{
_zoom = 		5.0;
};

if (_zoom < 0) then
{
_zoom = 0.0;
};

missionNamespace setVariable [			"BIS_EGSpectatorCamera_zoom", _zoom];
};





case "AddYawInput" :
{
private "_value";
_value = _params select 0;

private "_yaw";
_yaw = missionNamespace getVariable [			"BIS_EGSpectatorCamera_yaw", 0.0];
_yaw = _yaw + _value;

if (_yaw > 180.0) then
{
_yaw = _yaw - 360.0;
};

if (_yaw < -180.0) then
{
_yaw = _yaw + 360.0;
};

missionNamespace setVariable [			"BIS_EGSpectatorCamera_yaw", _yaw];
};





case "AddPitchInput" :
{
private "_value";
_value = _params select 0;

private "_pitch";
_pitch = missionNamespace getVariable [			"BIS_EGSpectatorCamera_pitch", 0.0];
_pitch = _pitch - _value;

if (_pitch > 90.0) then
{
_pitch = 90.0;
};

if (_pitch < -90.0) then
{
_pitch = -90.0;
};

missionNamespace setVariable [			"BIS_EGSpectatorCamera_pitch", _pitch];
};





case "ResetInputs" :
{
missionNamespace setVariable [			"BIS_EGSpectatorCamera_zoom", 0.5];
missionNamespace setVariable [			"BIS_EGSpectatorCamera_yaw", 0.0];
missionNamespace setVariable [			"BIS_EGSpectatorCamera_pitch", 0.0];
};




case "ToggleCameraLights" :
{
private ["_camera", "_on"];
_camera = missionNamespace getVariable [						"BIS_EGSpectatorCamera_camera", objNull];
_on = missionNamespace getVariable [			"BIS_EGSpectatorCamera_lightsOn", false];

if (_on) then
{
{
deleteVehicle _x;
} forEach (missionNamespace getVariable [				"BIS_EGSpectatorCamera_lights", []]);

missionNamespace setVariable [				"BIS_EGSpectatorCamera_lights", []];
missionNamespace setVariable [			"BIS_EGSpectatorCamera_lightsOn", false];
}
else
{
private "_cameraLight";
_cameraLight = "#lightpoint" createvehicleLocal getPosASL _camera;
_cameraLight setLightBrightness 2;
_cameraLight setLightAmbient [1,1,1];
_cameraLight setLightColor [0,0,0];
_cameraLight lightAttachObject [_camera, [0,0,0]];

private "_pointerLight";
_pointerLight = "#lightpoint" createvehicleLocal getPosASL _camera;
_pointerLight setLightBrightness 1;
_pointerLight setLightAmbient [1,1,1];
_pointerLight setLightColor [0,0,0];

missionNamespace setVariable [				"BIS_EGSpectatorCamera_lights", [_cameraLight, _pointerLight]];
missionNamespace setVariable [			"BIS_EGSpectatorCamera_lightsOn", true];
};
};




case "ToggleVeryFastSpeed" :
{
private _bEnable = _params param [0, false, [false]];

if !(missionNamespace getVariable [			"BIS_EGSpectatorCamera_isVeryFastSpeed", false] isEqualTo _bEnable) then
{
private _camera = ["GetCamera"] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };
private _cameraMode = ["GetCameraMode"] call 								{ _this call (missionNamespace getVariable ["BIS_fnc_EGSpectatorCamera", {}]) };

if (_cameraMode == 						"free") then
{
missionNamespace setVariable [			"BIS_EGSpectatorCamera_isVeryFastSpeed", _bEnable];

if (_bEnable) then
{
_camera camCommand format ["speedDefault %1", 					3.0];
}
else
{
_camera camCommand format ["speedDefault %1", 					0.1];
};
}
else
{
_camera camCommand format ["speedDefault %1", 					0.1];
missionNamespace setVariable [			"BIS_EGSpectatorCamera_isVeryFastSpeed", false];
};
};
};




default
{
scriptName "BIS_fnc_EGSpectatorCamera: Default";
["Unknown mode: %1", _mode] call BIS_fnc_error;
};
};
